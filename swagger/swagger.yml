swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /auction_item/:
    get:
      tags:
      - auction_item
      description: get AuctionItem
      operationId: AuctionItemController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AuctionItem'
        "403":
          description: ""
    post:
      tags:
      - auction_item
      description: create AuctionItem
      operationId: AuctionItemController.Post
      parameters:
      - in: body
        name: body
        description: body for AuctionItem content
        required: true
        schema:
          $ref: '#/definitions/models.AuctionItem'
      responses:
        "201":
          description: '{int} models.AuctionItem'
        "403":
          description: body is empty
  /auction_item/{id}:
    get:
      tags:
      - auction_item
      description: get AuctionItem by id
      operationId: AuctionItemController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AuctionItem'
        "403":
          description: :id is empty
    put:
      tags:
      - auction_item
      description: update the AuctionItem
      operationId: AuctionItemController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for AuctionItem content
        required: true
        schema:
          $ref: '#/definitions/models.AuctionItem'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AuctionItem'
        "403":
          description: :id is not int
    delete:
      tags:
      - auction_item
      description: delete the AuctionItem
      operationId: AuctionItemController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /auction_target/:
    get:
      tags:
      - auction_target
      description: get AuctionTarget
      operationId: AuctionTargetController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AuctionTarget'
        "403":
          description: ""
    post:
      tags:
      - auction_target
      description: create AuctionTarget
      operationId: AuctionTargetController.Post
      parameters:
      - in: body
        name: body
        description: body for AuctionTarget content
        required: true
        schema:
          $ref: '#/definitions/models.AuctionTarget'
      responses:
        "201":
          description: '{int} models.AuctionTarget'
        "403":
          description: body is empty
  /auction_target/{id}:
    get:
      tags:
      - auction_target
      description: get AuctionTarget by id
      operationId: AuctionTargetController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AuctionTarget'
        "403":
          description: :id is empty
    put:
      tags:
      - auction_target
      description: update the AuctionTarget
      operationId: AuctionTargetController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for AuctionTarget content
        required: true
        schema:
          $ref: '#/definitions/models.AuctionTarget'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AuctionTarget'
        "403":
          description: :id is not int
    delete:
      tags:
      - auction_target
      description: delete the AuctionTarget
      operationId: AuctionTargetController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
definitions:
  models.AuctionItem:
    title: AuctionItem
    type: object
    properties:
      ApplyCount:
        type: integer
        format: int64
      AuctionTargetId:
        type: integer
        format: int64
      BidCount:
        type: integer
        format: int64
      BuyRestrictions:
        type: integer
        format: int64
      CatNames:
        type: string
      CollateralCatName:
        type: string
      ConsultPrice:
        type: number
        format: double
      Credit:
        type: boolean
      CurrentPrice:
        type: number
        format: double
      DelayCount:
        type: integer
        format: int64
      End:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      InitialPrice:
        type: number
        format: double
      ItemUrl:
        type: string
      MarketPrice:
        type: number
        format: double
      MnNotice:
        type: boolean
      PicUrl:
        type: string
      SellOff:
        type: boolean
      Start:
        type: integer
        format: int64
      Status:
        type: string
      SupportLoans:
        type: integer
        format: int64
      SupportOrgLoan:
        type: integer
        format: int64
      TimeToEnd:
        type: integer
        format: int64
      TimeToStart:
        type: integer
        format: int64
      Title:
        type: string
      UpdateTime:
        type: string
        format: datetime
      ViewerCount:
        type: integer
        format: int64
      XmppVersion:
        type: string
  models.AuctionTarget:
    title: AuctionTarget
    type: object
    properties:
      Available:
        type: boolean
      Category:
        type: string
      CityOrLocation:
        type: string
      CreateTime:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Url:
        type: string
tags:
- name: auction_item
  description: |
    AuctionItemController operations for AuctionItem
- name: auction_target
  description: |
    AuctionTargetController operations for AuctionTarget
